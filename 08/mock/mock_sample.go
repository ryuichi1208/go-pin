// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInter is a mock of Inter interface.
type MockInter struct {
	ctrl     *gomock.Controller
	recorder *MockInterMockRecorder
}

// MockInterMockRecorder is the mock recorder for MockInter.
type MockInterMockRecorder struct {
	mock *MockInter
}

// NewMockInter creates a new mock instance.
func NewMockInter(ctrl *gomock.Controller) *MockInter {
	mock := &MockInter{ctrl: ctrl}
	mock.recorder = &MockInterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInter) EXPECT() *MockInterMockRecorder {
	return m.recorder
}

// Next mocks base method.
func (m *MockInter) Next(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Next indicates an expected call of Next.
func (mr *MockInterMockRecorder) Next(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockInter)(nil).Next), arg0)
}
